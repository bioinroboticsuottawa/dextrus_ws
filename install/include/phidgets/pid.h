// Generated by gencpp from file phidgets/pid.msg
// DO NOT EDIT!


#ifndef PHIDGETS_MESSAGE_PID_H
#define PHIDGETS_MESSAGE_PID_H

#include <ros/service_traits.h>


#include <phidgets/pidRequest.h>
#include <phidgets/pidResponse.h>


namespace phidgets
{

struct pid
{

typedef pidRequest Request;
typedef pidResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct pid
} // namespace phidgets


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::phidgets::pid > {
  static const char* value()
  {
    return "095b14b7e37aa3b1f86557d3dcc10fde";
  }

  static const char* value(const ::phidgets::pid&) { return value(); }
};

template<>
struct DataType< ::phidgets::pid > {
  static const char* value()
  {
    return "phidgets/pid";
  }

  static const char* value(const ::phidgets::pid&) { return value(); }
};


// service_traits::MD5Sum< ::phidgets::pidRequest> should match 
// service_traits::MD5Sum< ::phidgets::pid > 
template<>
struct MD5Sum< ::phidgets::pidRequest>
{
  static const char* value()
  {
    return MD5Sum< ::phidgets::pid >::value();
  }
  static const char* value(const ::phidgets::pidRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::phidgets::pidRequest> should match 
// service_traits::DataType< ::phidgets::pid > 
template<>
struct DataType< ::phidgets::pidRequest>
{
  static const char* value()
  {
    return DataType< ::phidgets::pid >::value();
  }
  static const char* value(const ::phidgets::pidRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::phidgets::pidResponse> should match 
// service_traits::MD5Sum< ::phidgets::pid > 
template<>
struct MD5Sum< ::phidgets::pidResponse>
{
  static const char* value()
  {
    return MD5Sum< ::phidgets::pid >::value();
  }
  static const char* value(const ::phidgets::pidResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::phidgets::pidResponse> should match 
// service_traits::DataType< ::phidgets::pid > 
template<>
struct DataType< ::phidgets::pidResponse>
{
  static const char* value()
  {
    return DataType< ::phidgets::pid >::value();
  }
  static const char* value(const ::phidgets::pidResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // PHIDGETS_MESSAGE_PID_H
